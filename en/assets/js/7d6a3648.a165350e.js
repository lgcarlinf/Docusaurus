"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[266],{6890:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var s=i(6070),t=i(5710);const o={},r="Git configuration",a={id:"Configuracion-de-git/configuracion-de-git",title:"Git configuration",description:"Guide based on UNIX systems, for Windows use the analogous commands or",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/Configuracion-de-git/configuracion-de-git.md",sourceDirName:"Configuracion-de-git",slug:"/Configuracion-de-git/",permalink:"/Docusaurus/en/docs/Configuracion-de-git/",draft:!1,unlisted:!1,editUrl:"https://github.com/lgcarlinf/docs/Configuracion-de-git/configuracion-de-git.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Redirect",permalink:"/Docusaurus/en/docs/redirect/"},next:{title:"Gu\xeda de contribuci\xf3n",permalink:"/Docusaurus/en/docs/guia-de-contribucion/"}},l={},c=[{value:"Before starting",id:"before-starting",level:2},{value:"Creating shh keys",id:"creating-shh-keys",level:2},{value:"Configuration distribution",id:"configuration-distribution",level:2},{value:"Upload the public key to Github",id:"upload-the-public-key-to-github",level:2},{value:"Clone repositories",id:"clone-repositories",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"git-configuration",children:"Git configuration"}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"Guide based on UNIX systems, for Windows use the analogous commands or\nthe file explorer of your choice"})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"It is not a linear guide, do not just execute the commands, review thoroughly\nthe indications and if the corresponding case"})}),"\n",(0,s.jsx)(n.h2,{id:"before-starting",children:"Before starting"}),"\n",(0,s.jsx)(n.p,{children:"What will be done in this guide will be:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Create multiple ssh keys: in case you need them on the same device\nhave ssh (passwordless) access to different github accounts, you need\ncreate different shh keys or in case you need to separate your ssh accesses for different\ngit repositories"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Create folders with git configuration files so that\nYou can use the different SSH keys as needed"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Place the instructions in the git configuration file at the level\nto correctly choose which shh key to use for operations\nsuch as branch pushing and repository cloning."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"creating-shh-keys",children:"Creating shh keys"}),"\n",(0,s.jsx)(n.p,{children:"We usually save our shh keys in the .shh folder on our\nuser folder"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd ~/.ssh\n"})}),"\n",(0,s.jsx)(n.p,{children:"We can generate our ssh key pair with the command"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ssh-keygen -t rsa -f ./id_rsa_alternative\n"})}),"\n",(0,s.jsx)(n.p,{children:"or only with"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ssh-keygen -f ./id_rsa_alternative\n"})}),"\n",(0,s.jsx)(n.p,{children:"Or with any other algorithm of your preference/need"}),"\n",(0,s.jsx)(n.p,{children:"The -t parameter allows you to choose the algorithm, generally we use rsa since it is the most\naccepted in different git repositories such as Azure"}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"Don't limit yourself to just this guide, if you need more options to\nconfigure, can use, on UNIX systems"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"man ssh-keygen\n"})}),"\n",(0,s.jsx)(n.p,{children:"o, universalmente"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ssh-keygen --help\n"})}),"\n",(0,s.jsx)(n.p,{children:"You can repeat these steps as many times as necessary.\nto the number of keys you need, just with a different name in the parameter\n-f"}),"\n",(0,s.jsx)(n.p,{children:"Ejemplo"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ssh-keygen -f ./id_rsa_personal\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"The value ./ in the -f parameter will work as long as we are located\nthe .ssh folder IN OUR TERMIMAL EMULATOR, if we are only located in the\nfile explorer would not work"})}),"\n",(0,s.jsx)(n.h2,{id:"configuration-distribution",children:"Configuration distribution"}),"\n",(0,s.jsx)(n.p,{children:"As an example I will create two folders"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"mkdir alternative personal\n\n"})}),"\n",(0,s.jsx)(n.p,{children:"We navigate to the alternative folder"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd alternative\n\n"})}),"\n",(0,s.jsx)(n.p,{children:"We create a file called .gitconfig.alternative."}),"\n",(0,s.jsx)(n.p,{children:"For example for UNIX based systems and use vscde"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"code .gitconfig.alternative\n"})}),"\n",(0,s.jsx)(n.p,{children:"Or use editor of your choice"}),"\n",(0,s.jsx)(n.p,{children:"Then we can insert something like"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'[user]\nemail = developer@provedor.com # your github account email\nname = Developer # developer name\n\n[github]\nuser = "developer_asfg" # user of your github account\n\n[core]\nsshCommand = "ssh -i ~/.ssh/id_rsa_alternative"\n'})}),"\n",(0,s.jsx)(n.p,{children:"As you will see, reference is made here to the RSA key that was created exclusively\nfor alternative"}),"\n",(0,s.jsx)(n.p,{children:"We save, and now we move to the personal folder"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd ../personal\n"})}),"\n",(0,s.jsx)(n.p,{children:"We create the .gitconfig.personal file"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-code",children:"code .gitconfig.personal\n"})}),"\n",(0,s.jsx)(n.p,{children:"We put something like"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'[user]\nemail = lgcarlinf@personal.com # the email of my personal github account\nname = lgcarlinf # My name with which I sign my commits as develope open source\n \n[github]\nuser = "lgcarlinf" mi usuario personal de github \n\n[core]\nsshCommand = "ssh -i ~/.ssh/id_rsa_personal"\n\n'})}),"\n",(0,s.jsx)(n.p,{children:"As you can see, here I go to the personal ssh key"}),"\n",(0,s.jsx)(n.p,{children:"Finally I go to my User folder"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"\ncd ~\n\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now in this folder I edit the .gitconfig file adding the following"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"code .gitconfig\n\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Pre-configured at user level, this is an example, no need to copy\n[init]\ndefaultBranch = main\n \n\n# Routing configuration to choose depending on the folder\n\n[includeIf "gitdir:~/personal/"] # includes all .git projects in personal/\npath = ~/personal/.gitconfig.personal\n\n[includeIf "gitdir:~/alternative/"]\npath = ~/alternative/.gitconfig.alternative\n \n\n# You can create even more routes to more folders with different config\n[includeIf "gitdir:~/teletubie/"]\npath = ~/brive/.gitconfig.teletubi\n\n[core]\nexcludesfile = ~/.gitignore  # valid everywhere\n\n'})}),"\n",(0,s.jsx)(n.p,{children:"As you can see we have routed the use of the sh keys depending on the\nfolder where we are"}),"\n",(0,s.jsx)(n.p,{children:"From now on if I want to clone repos I must do it\nfrom my alternative folder"}),"\n",(0,s.jsx)(n.p,{children:"If you want to change the configuration of alternative I must modify the .gitconfig.alternative file and\nI won't affect the settings of my other folders."}),"\n",(0,s.jsx)(n.h2,{id:"upload-the-public-key-to-github",children:"Upload the public key to Github"}),"\n",(0,s.jsx)(n.p,{children:"Let us remember that the contents of the private key should not be disclosed, only the public key"}),"\n",(0,s.jsx)(n.p,{children:"Public keys have the ending .pub and were previously created together with their private partner"}),"\n",(0,s.jsx)(n.p,{children:"For example to access the contents of the alternative public key"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cat ~/.ssh/id_rsa_alternative.pub\n"})}),"\n",(0,s.jsx)(n.p,{children:"and this content must be copied and pasted into github in the respective section."}),"\n",(0,s.jsx)(n.p,{children:"To do this you must go to settings in the user menu and then select in the side menu\nleft the SSH option."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Don't forget to activate permissions to the respective organizations in the SSO option"})}),"\n",(0,s.jsx)(n.h2,{id:"clone-repositories",children:"Clone repositories"}),"\n",(0,s.jsxs)(n.p,{children:["To clone the repositories you should not use the https protocol, but ssh and inside the ",(0,s.jsx)(n.code,{children:"alternative"})," folder or\nits equivalent."]}),"\n",(0,s.jsxs)(n.p,{children:["At the moment click on the ",(0,s.jsx)(n.code,{children:"Code"})," button, choose the ",(0,s.jsx)(n.code,{children:"SSH"})," option and not HTTPS"]}),"\n",(0,s.jsx)(n.p,{children:"Make sure the format does not contain an https URI, but rather ssh or the git ssh format"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone git@github.com:Wiki-alternative/knowledge-center.git\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Don't forget to be inside the alternative folder or its equivalent"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},5710:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var s=i(758);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);