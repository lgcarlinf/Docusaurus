"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7998],{7354:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var i=o(6070),c=o(5710);const r={},a="Gu\xeda de contribuci\xf3n",l={id:"guia-de-contribucion/guia-de-contribucion",title:"Gu\xeda de contribuci\xf3n",description:"Env\xedo",source:"@site/docs/guia-de-contribucion/guia-de-contribucion.mdx",sourceDirName:"guia-de-contribucion",slug:"/guia-de-contribucion/",permalink:"/Docusaurus/docs/guia-de-contribucion/",draft:!1,unlisted:!1,editUrl:"https://github.com/lgcarlinf/docs/guia-de-contribucion/guia-de-contribucion.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configuracion de git",permalink:"/Docusaurus/docs/Configuracion-de-git/"}},s={},d=[{value:"Env\xedo",id:"env\xedo",level:2},{value:"workflow",id:"workflow",level:3},{value:"branchs",id:"branchs",level:3},{value:"Commits",id:"commits",level:2},{value:"Formato del mensaje",id:"formato-del-mensaje",level:3},{value:"Header",id:"header",level:3},{value:"Ejemplo header",id:"ejemplo-header",level:4},{value:"Tipos de commit",id:"tipos-de-commit",level:4},{value:"Body",id:"body",level:3},{value:"Ejemplo body",id:"ejemplo-body",level:4},{value:"Footer",id:"footer",level:3},{value:"Ejemplo footer",id:"ejemplo-footer",level:4},{value:"Ejemplos",id:"ejemplos",level:3}];function t(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"gu\xeda-de-contribuci\xf3n",children:"Gu\xeda de contribuci\xf3n"}),"\n",(0,i.jsx)(n.h2,{id:"env\xedo",children:"Env\xedo"}),"\n",(0,i.jsx)(n.p,{children:"Enviar un PR por sub tarea, no enviar PRs con m\xfaltiples funcionalidades."}),"\n",(0,i.jsx)(n.h3,{id:"workflow",children:"workflow"}),"\n","\n",(0,i.jsx)(n.mermaid,{value:"gitGraph\n    commit\n    commit\n    branch develop\n    checkout develop\n    commit\n    commit\n    checkout main\n    merge develop\n    commit\n    commit"}),"\n",(0,i.jsx)(n.h3,{id:"branchs",children:"branchs"}),"\n","\n",(0,i.jsx)(n.p,{children:"Un solo developer"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git checkout -b developer/feature\n"})}),"\n",(0,i.jsx)(n.p,{children:"Multi developer"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git checkout -b feature/integration\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git checkout -b developer/feature\n"})}),"\n",(0,i.jsx)(n.h2,{id:"commits",children:"Commits"}),"\n",(0,i.jsx)(n.h3,{id:"formato-del-mensaje",children:"Formato del mensaje"}),"\n",(0,i.jsxs)(n.p,{children:["Para poder crear changelogs, se seguir\xe1 las recomendaciones de ",(0,i.jsx)(n.a,{href:"https://www.conventionalcommits.org/en/v1.0.0/#summary",children:"conventional commits"})]}),"\n",(0,i.jsxs)(n.p,{children:["Cada commit consistir\xe1 en un ",(0,i.jsx)(n.code,{children:"header"})," , ",(0,i.jsx)(n.code,{children:"body"})," (opcional) y ",(0,i.jsx)(n.code,{children:"footer"})," (opcional)"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-txt",children:"<header>\n\n<body>\n\n<footer>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"header",children:"Header"}),"\n",(0,i.jsx)(n.p,{children:"No debe pasar de los 50 caracteres"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-txt",children:"<type>: <resumen>\n  \u2502       \u2502             \n  \u2502       \u2502   \n  \u2502       \u2502\n  \u2502       \u2514\u2500\u2af8Resumen en tiempo presente y transitivo. Sin may\xfasculas ni punto final.\n  \u2502\n  \u2514\u2500\u2af8 Commit Type: [\n  'build',\n  'chore',\n  'ci',\n  'docs',\n  'feat',\n  'fix',\n  'perf',\n  'refactor',\n  'revert',\n  'style',\n  'test'\n]\n"})}),"\n",(0,i.jsx)(n.h4,{id:"ejemplo-header",children:"Ejemplo header"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-txt",children:"feat: Agrega pasarela de pagos con codigo qr\n"})}),"\n",(0,i.jsx)(n.h4,{id:"tipos-de-commit",children:"Tipos de commit"}),"\n",(0,i.jsx)(n.p,{children:"Must be one of the following:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'build: Cambios que afectan el "build" del sistema o dependencias externas'}),"\n",(0,i.jsx)(n.li,{children:"ci: Cambios en los archivos de configuraci\xf3n o scripts relacionados con Continuous Integration"}),"\n",(0,i.jsx)(n.li,{children:"docs: Cambios solo de documentaci\xf3n"}),"\n",(0,i.jsx)(n.li,{children:"feat: Una funcionalidad nueva"}),"\n",(0,i.jsx)(n.li,{children:"fix: Fix de un bug"}),"\n",(0,i.jsx)(n.li,{children:"perf: Cambios que mejoran la performance"}),"\n",(0,i.jsx)(n.li,{children:"refactor: Cambios que no son ni fix ni nuevas funcionalidades"}),"\n",(0,i.jsx)(n.li,{children:"style: Cambios que no afectan el sentido del codigo (espacios, formateo , etc)"}),"\n",(0,i.jsx)(n.li,{children:"test: Se a\xf1aden tests faltantes o se corrigen los que ya exist\xedan"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"body",children:"Body"}),"\n",(0,i.jsx)(n.p,{children:"No debe exceder los 70 caracteres (opcional, preferir multi l\xednea en caso se exceda)."}),"\n",(0,i.jsx)(n.h4,{id:"ejemplo-body",children:"Ejemplo body"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-txt",children:"Generaci\xf3n de c\xf3digo QR con la lib XYZ integrando Niubbiz.\n"})}),"\n",(0,i.jsx)(n.p,{children:"Explicar el porqu\xe9 del cambio."}),"\n",(0,i.jsx)(n.h3,{id:"footer",children:"Footer"}),"\n",(0,i.jsx)(n.p,{children:"Colocar en caso sean BREAKING CHANGE o DEPRECATION"}),"\n",(0,i.jsx)(n.h4,{id:"ejemplo-footer",children:"Ejemplo footer"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-txt",children:"BREAKING CHANGE: Se actualiza el script del iframe de Niubiz para compatibilidad con el lector QR\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ejemplos",children:"Ejemplos"}),"\n",(0,i.jsx)(n.p,{children:"Solo header"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'git commit -m "docs: Especifica protocolo de commits"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Header + Body"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'git commit -m "docs: Especifica protocolo de commits" -m "Agrega tipos y estructura del mensaje"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Header + Body"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'git commit -m "refactor: Traslada peticiones a servicios" -m "SRP por dominio e IoC" -m "DEPRECATION: hooks con la l\xf3gica de peticiones quedan deprecados"\n'})})]})}function m(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}},5710:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>l});var i=o(758);const c={},r=i.createContext(c);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);